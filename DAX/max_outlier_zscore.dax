Max Outlier Zscore = 

/*
returns the max z-score, if the z-score exceeds the defined "outlier_std_factor" variable.
This is to detect anomalies / possibly corrupt data. 

Combine this in a table visual with a number of dimensions that you want to analyze to get the outliers over dates in the data. 

calculation of z-score and robust z-score see e.g. https://databasecamp.de/statistik/z-score.

We use the normal z-score which implies data to be distributed normally. The reason is just performance. Some comparisons showed that the differences between both numbers are not relevant for the within the end to end data model. But performance difference between both methods is vast (since medianx needs to order values by size). 

Implement this measure inside of a calculation group so that you can use it based on whatever measure you like.
*/

//Define the Sigma-Factor (threshold) that defines when an outlier is detected). HIgher values mean fewer outliers. Typical selection is 3.
//2 -> 4,5%; 2,5 -> 1% ; 3 -> 0,27%; 3,5 -> 0,05%; 4 -> 0,006%
Var outlier_std_deviation_factor = 3

//Define the minimum standard deviation that returns any results. This is relevant when using average malo volume with this calculation item. The average malo volume might not or only slightly change within a date period. A minimum change would otherwise be recognized as outlier. We do only want outliers if the standard deviation is not tiny. 
Var min_std_deviation = 1

//Outliers do only make sense if there is enough data points available.
Var min_number_observations = 10

//Calculate statistical data: Number of calculated values, mean value, variance and standard deviation
//Var number_dates = DISTINCTCOUNT('Date'[Year And Month (Date)])
Var number_dates = sumx(
    filter(VALUES('Date'[Year And Month (Date)]),NOT(ISBLANK(SELECTEDMEASURE()))),
    1
)

Var sum_value = sumx(VALUES('Date'[Year And Month (Date)]),SELECTEDMEASURE())

Var mean_value = sum_value / number_dates  // use "MEDIANX('Date',[Average Malo Volume])"  if you want to implement the robust z-score. But have in mind that performance is much slower due to sorting. 

Var result_variance = DIVIDE(1, number_dates,BLANK()) 
                        * sumx(FILTER(VALUES('Date'[Year And Month (Date)]),NOT(ISBLANK(SELECTEDMEASURE()))),
                        power(SELECTEDMEASURE() - mean_value,2))

Var std_deviation = sqrt(result_variance)

//return the max zscore of all outliers if there are any. Alternatively you could also select the average zscore or the number of outliers. But farthest away outlier seems to be the best way to find the biggest glitches in the data. 
Var max_zscore_outliers = maxx(FILTER(VALUES('Date'[Year And Month (Date)]),NOT(ISBLANK(SELECTEDMEASURE()))),
    Var zscore = abs(DIVIDE(SELECTEDMEASURE() - mean_value, std_deviation,BLANK()))
    Var result = if(zscore > outlier_std_deviation_factor, zscore, BLANK())
    return result
)

return if(std_deviation > min_std_deviation && max_zscore_outliers > outlier_std_deviation_factor  &&  number_dates >= min_number_observations, max_zscore_outliers,BLANK())